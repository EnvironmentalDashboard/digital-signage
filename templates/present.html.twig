<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>Environmental Dashboard Digital Display</title>
  <style>
    html, body {
      height: 100%;
      width: 100%;
    }
    body {
      margin: 0px;
      padding: 0px;
    }
    .presentation {
      height: 100%;
      width: 100%;
    }
  </style>
</head>

<body>
  {% for presentation in cycle %}
    <div id="pres{{presentation.id}}" class="presentation"{% if loop.index != 1 %} style="display:none"{% endif %}>
    {{ presentation.markup|raw }}
    </div>
  {% endfor %}
  <script>
    var pres_durations = {{ pres_durations|json_encode|raw }};
		var pres_ids = Object.keys(pres_durations);
		var cur_pres_pos = Object.keys(pres_ids);
    var cur_pres = 0, last_pres = pres_ids.length-1;
    var active_timers = [];
    function next_pres() {
      if (cur_pres === last_pres) {
        cur_pres = 0;
      }
      document.getElementById('pres' + pres_ids[cur_pres]).style.display = 'none';
      document.getElementById('pres' + pres_ids[++cur_pres]).style.display = 'initial';
      clear_timers();
      // rotate frames in carousels
      var carousels = document.getElementById('pres' + pres_ids[cur_pres]).children;
      for (var i = 0; i < carousels.length; i++) {
        animate_carousel(carousels[i].children);
      }
      setTimeout(next_pres, pres_durations[pres_ids[cur_pres]] * 1000);
    }
    function animate_carousel(frames) {
      if (frames.length > 1) { // if there are multiple frames to swap between
        
        var i;
        var total_time = 0; // total duration of the cycle of presentations
        for (i = 0; i < frames.length; i++) {
          var dur = frames[i].getAttribute('data-duration') * 1000;
          total_time += dur;
        }
        
        var start_in = 0; // offset when each frame starts by duration of the frames that come before it
        for (i = 0; i < frames.length; i++) {
          if (i > 0) {
            var last_frame = frames[i-1];
            start_in += last_frame.getAttribute('data-duration') * 1000;
          }
          if (i === frames.length-1) {
            var next_frame = frames[0];
          } else {
            var next_frame = frames[i+1];
          }
          set_timers(frames[i], next_frame, total_time, start_in);
        }

      }
    }
    function set_timers(cur_frame, next_frame, total_time, start_in) {
      var offset = setTimeout(function() {
        var every = setInterval(function() {
          cur_frame.style.display = 'none';
          next_frame.style.display = 'initial';
        }, total_time);
        active_timers.push(every);
      }, start_in);
      active_timers.push(offset);
    }
    function clear_timers() {
      for (var i = 0; i < active_timers.length; i++) { // stop rotating carousels
        active_timers[i] = null;
      }
		}

    // begin cycling through presentations
    setTimeout(next_pres, pres_durations[pres_ids[cur_pres]] * 1000);
    // begin rotating frames in carousels
    var carousels = document.getElementById('pres' + pres_ids[cur_pres]).children;
    for (var i = 0; i < carousels.length; i++) {
      animate_carousel(carousels[i].children);
		}
		// open websocket conn to recieve commands from remote controllers
		var conn = new WebSocket('ws://localhost:8080/display/1');
		conn.onmessage = function(e) {
			// todo: check origin/sanitize input for security
			console.log('ws data', e.data);
			var i;
			var frame = document.getElementById('frame' + e.data);
			var carousel = frame.parentNode;
			var pres = carousel.parentNode;
			var all_frames = carousel.children;
			for (i = 0; i < all_frames.length; i++) {
				all_frames[i].style.display = 'none';
			}
			frame.style.display = 'initial';
			if (pres.style.display !== 'none') { // not already active pres
				document.getElementById('pres' + pres_ids[cur_pres]).style.display = 'none';
				pres.style.display = 'initial';
				cur_pres = cur_pres_pos.find(key => pres_ids[key] === e.data);
				console.log('cur_pres', cur_pres);
			}
			clear_timers();
			var carousels = pres.children;
      for (i = 0; i < carousels.length; i++) {
        animate_carousel(carousels[i].children);
      }
      setTimeout(next_pres, pres_durations[pres_ids[cur_pres]] * 1000);
		};

  </script>
</body>

</html>